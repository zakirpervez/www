<?php


use PHPUnit\Framework\TestCase;

class OrderTest extends TestCase
{
    public function testOrderIsProceed() {
        $gateway = $this->getMockBuilder('PaymentGateway')
            ->onlyMethods(['charge'])
            ->getMock();

        $gateway->expects($this->once())
            ->method('charge')
            ->with($this->equalTo(200.0))
            ->willReturn(true);

        $order = new Order(2, 100.0);
        $this->assertTrue($order->processPayment($gateway));
    }

    public function testOrderIsProceedWithMockery() {
        $gateway = Mockery::mock('PaymentGateway');
        $gateway->shouldReceive('charge')
            ->once()
            ->with(200)
            ->andReturn(true);

        $order = new Order(2, 100.0);
        $this->assertTrue($order->processPayment($gateway));
    }

    public function testOrderIsProceedUsingAMock() {
        $order = new Order(3, 1.99);
        $this->assertEquals(5.97, $order->amount);

        $gateway = Mockery::mock('PaymentGateway');
        $gateway->shouldReceive('charge')
            ->once()
            ->with(5.97)
            ->andReturn(true);

        $order->process($gateway);
    }

    public function testOrderIsProceedUsingASpy() {
        $order = new Order(3, 1.99);
        $this->assertEquals(5.97, $order->amount);

        $gateway = Mockery::spy('PaymentGateway');

        $order->process($gateway);

        $gateway->shouldHaveReceived('charge')->once()->with(5.97);
    }

    public function tearDown(): void
    {
        Mockery::close();
        parent::tearDown(); // TODO: Change the autogenerated stub
    }
}
