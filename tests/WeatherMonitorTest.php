<?php


use PHPUnit\Framework\TestCase;

class WeatherMonitorTest extends TestCase
{

    public function testCorrectTemperatureIsReturned() {
        $service = $this->createMock(TemperatureService::class);
        $valueMap = [
            ['12:00', 20],
            ['14:00', 26]
        ];
        $service->expects($this->exactly(2))
            ->method('getTemperature')
            ->will($this->returnValueMap($valueMap));

        $sut = new WeatherMonitor($service);
        $result = $sut->getAverageTemperature('12:00', '14:00');
        $this->assertEquals(23.0, $result);
    }

    public function testCorrectTemperatureIsReturnedWithMockery() {
        $service = Mockery::mock(TemperatureService::class);
        $valueMap = [
            ['12:00', 20],
            ['14:00', 26]
        ];
        $service->shouldReceive('getTemperature')->once()->with('12:00')->andReturn(20);
        $service->shouldReceive('getTemperature')->once()->with('14:00')->andReturn(26);

        $sut = new WeatherMonitor($service);
        $result = $sut->getAverageTemperature('12:00', '14:00');
        $this->assertEquals(23.0, $result);
    }

    public function tearDown(): void
    {
        Mockery::close();
        parent::tearDown(); // TODO: Change the autogenerated stub
    }

}
